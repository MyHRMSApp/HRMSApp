<?xml version="1.0" encoding="UTF-8"?>

<mfp:adapter name="socialLogin"
             xmlns:mfp="http://www.ibm.com/mfp/integration"
             xmlns:http="http://www.ibm.com/mfp/integration/http">

	<displayName>Social Login adapter</displayName>
	<description>
        Provides integration with Google and Facebook sign-in.
        The client performs sign-in, obtains the vendor token, and sends it to the 'socialLogin' security check as a credentials parameter.
        The security check verifies the token with its vendor, and creates an MFP Authenticated User.
    </description>

    <securityCheckDefinition name="socialLogin" class="com.github.mfpdev.sample.socialogin.SocialLoginSecurityCheck">
        <property name="keepOriginalToken" type="boolean" defaultValue="false"
                  displayName="keep original token"
                  description="If true, the token submitted by the client is stored in the Authenticated User as an attribute 'originalToken'"/>
        <property name="google.clientId"
                  defaultValue="609753179467-2l3pspgamabenaigj9euf0mqs9ug7cpg.apps.googleusercontent.com"
                  displayName="google client Id"
                  description="OAuth 2.0 client ID that was created for your server. Get it from Google Developers Console
                  at https://console.developers.google.com/projectselector/apis/credentials"/>
        
        <property name="maxAttempts" defaultValue="1" displayName="How many attempts are allowed"/>
		<!-- <property name="blockedStateExpirationSec" defaultValue="10" displayName="How long before the client can try again (seconds)"/>
		<property name="successStateExpirationSec" defaultValue="60" displayName="How long is a successful state valid for (seconds)"/>
        <property name="inactivityTimeoutSec" defaultValue="30" displayName="How long is a successful state valid for (seconds)"/> -->
        <property name="UserCustomMessage" defaultValue="UserCustomMessage" displayName="UserCustomMessage"/>

    </securityCheckDefinition>

</mfp:adapter>
